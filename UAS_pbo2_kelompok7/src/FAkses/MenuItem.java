package FAkses;

import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author PC
 */
public class MenuItem extends javax.swing.JPanel {
public void addActionListener(ActionListener listener) {
        act = listener;
    }
    /**
     * @return the subMenu
     */
    public ArrayList<MenuItem> getSubMenu() {
        return subMenu;
    }

    private final ArrayList<MenuItem> subMenu = new ArrayList<>();

    private ActionListener act;

    /**
     * Creates new form MenuItem
     */
    public MenuItem(Icon icon, boolean sbn, Icon iconsub, String menuName, ActionListener act, MenuItem... subMenu) {
        initComponents();
        
        
        
        lb_icon.setIcon(icon);
        lb_menuName.setText(menuName);
        lb_iconSUb.setIcon(iconsub);
        lb_iconSUb.setVisible(sbn);

        if (act != null) {
            this.act = act;
        }
        this.setSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMaximumSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMinimumSize(new Dimension(Integer.MAX_VALUE, 45));
        for (int i = 0; i < subMenu.length; i++) {
            this.subMenu.add(subMenu[i]);

            subMenu[i].setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_menuName = new javax.swing.JLabel();
        lb_iconSUb = new javax.swing.JLabel();
        lb_icon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_menuName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_menuName.setForeground(new java.awt.Color(255, 255, 255));
        lb_menuName.setText("Menu item");
        add(lb_menuName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 110, 30));
        add(lb_iconSUb, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 30, 32));
        add(lb_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 30, 32));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/sidebar2.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 270, 60));
    }// </editor-fold>//GEN-END:initComponents

    private boolean showing = false;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        if (showing) {

            hideMenu();

        } else {

            showMenu();

        }

        if (act != null) {

            act.actionPerformed(null);
        }
    }//GEN-LAST:event_formMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lb_icon;
    private javax.swing.JLabel lb_iconSUb;
    private javax.swing.JLabel lb_menuName;
    // End of variables declaration//GEN-END:variables

    private void hideMenu() {
        new Thread(new Runnable() {

            @Override

            public void run() {

                for (int i = subMenu.size() - 1; i >= 0; i--) {

                    sleep();

                    subMenu.get(i).setVisible(false);

                    subMenu.get(1).hideMenu();

                }
                getParent().repaint();

                getParent().revalidate();

                showing = false;

            }

        }).start();
    }

    private void showMenu() {
        new Thread(new Runnable() {
            @Override

            public void run() {

                for (int i = 0; i < subMenu.size(); i++) {
                    sleep();

                    subMenu.get(i).setVisible(true);
                }
                showing = true;
                getParent().repaint();
                getParent().revalidate();
            }
        }).start();
    }

    private void sleep() {
        try {
            Thread.sleep(20);
        } catch (Exception e) {

        }
    }
}
