/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package other;

import Data.FCabang;
import static Data.FCabang.stock2;
import static Data.FCabang.txtkode;
import static Data.FGudang.textid;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class FdataCabang extends javax.swing.JFrame {

    /**
     * Creates new form FdataDiizinkan
     */
    public FdataCabang() {
        initComponents();
        tampil();
    }

    public void setTextId(String idgudang, String idpengelolaan) {
        Data.FGudang.textid.setText(idgudang);
        Data.FGudang.textidp.setText(idpengelolaan);

        dispose();
    }

//    public void delete(String kodeAlat) {
//        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin Mengambil data ini?\njika ya maka akan terhapus otomatis", "Konfirmasi", JOptionPane.YES_NO_OPTION);
//        if (confirm == JOptionPane.YES_OPTION) {
//            try (Connection conn = Koneksi.KoneksiDatabase.getKoneksi()) {
//                String sql = "DELETE FROM tb_pengelolaan WHERE kode_alat = ?";
//                PreparedStatement statement = conn.prepareStatement(sql);
//                statement.setString(1, kodeAlat);
//
//                int rowsDeleted = statement.executeUpdate();
//                if (rowsDeleted > 0) {
//                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
//                } else {
//                    JOptionPane.showMessageDialog(null, "Tidak ada data yang terhapus");
//                }
//            } catch (SQLException e) {
//                e.printStackTrace();
//            }
//        }
//    }
    public void tampil() {
        String cabang = SESSION.SessionCabang.getSessionCabang();
        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_uas_pbo2", "root", "")) {
            String sql = "SELECT * FROM tb_cabang WHERE Cabang != ? ";

            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, cabang);

            ResultSet rs = stmt.executeQuery();

            // Menghapus data sebelumnya dari model tabel
            DefaultTableModel tableModel = (DefaultTableModel) tampil.getModel();
            tableModel.setRowCount(0);
            tableModel.setColumnCount(0);
            tableModel.addColumn("ID cabang");
            tableModel.addColumn("ID gudang");
            tableModel.addColumn("Kode Alat");
            tableModel.addColumn("Nama Alat");
            tableModel.addColumn("Jumlah");
            tableModel.addColumn("Harga");
            tableModel.addColumn("Merek");
            tableModel.addColumn("Tanggal terima");
            tableModel.addColumn("Tanggal kirim");
            tableModel.addColumn("Cabang");

            // Mengisi data ke model tabel
            while (rs.next()) {
                String id = rs.getString("id_cabang");
                String id_gudang = rs.getString("id_gudang");
                String kodeAlat = rs.getString("kode_alat");
                String namaAlat = rs.getString("nama_alat");
                int jumlah = rs.getInt("jumlah");
                int harga = rs.getInt("harga_alat");
                String merek = rs.getString("merek");
                String tglteriima = rs.getString("tgl_terima");
                String tglkiriim = rs.getString("tgl_kirim");
                String Cabang2 = rs.getString("Cabang");

                Object[] rowData = {id, id_gudang, kodeAlat, namaAlat, jumlah, harga, merek, tglteriima, tglkiriim, Cabang2,};
                tableModel.addRow(rowData);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tampil = new rojerusan.RSTableMetro();
        rSMetroTextPlaceHolder1 = new rojerusan.RSMetroTextPlaceHolder();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/close.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, -1, 40));

        tampil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tampil.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tampil.setGridColor(new java.awt.Color(12, 31, 70));
        tampil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tampilMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tampil);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 950, 510));

        rSMetroTextPlaceHolder1.setForeground(new java.awt.Color(12, 31, 70));
        rSMetroTextPlaceHolder1.setText("SEARCH");
        rSMetroTextPlaceHolder1.setBorderColor(new java.awt.Color(12, 31, 70));
        rSMetroTextPlaceHolder1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSMetroTextPlaceHolder1ActionPerformed(evt);
            }
        });
        jPanel1.add(rSMetroTextPlaceHolder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rSMetroTextPlaceHolder1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSMetroTextPlaceHolder1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rSMetroTextPlaceHolder1ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void tampilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tampilMouseClicked
        // TODO add your handling code here:
        int row = tampil.getSelectedRow();

        // Mengambil data dari tabel
        int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin Mengambil data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            String idkirim = tampil.getValueAt(row, 0).toString();
            String idgudang = tampil.getValueAt(row, 1).toString();
            String kodealat = tampil.getValueAt(row, 2).toString();
            String namaalat = tampil.getValueAt(row, 3).toString();
            String jumlah = tampil.getValueAt(row, 4).toString();
            String harga = tampil.getValueAt(row, 5).toString();
            String merek = tampil.getValueAt(row, 6).toString();
            String tglkirim = tampil.getValueAt(row, 7).toString();
            String Cabang = tampil.getValueAt(row, 8).toString();
            String status = tampil.getValueAt(row, 9).toString();

//            SESSION2.SessionIdKirim.setSessionIdKirim(idkirim);
//            FCabang.textid.setText(idkirim);
            FCabang.txtidgudang.setText(idgudang);
            FCabang.txtkode.setText(kodealat);
            FCabang.txtnamaalat.setText(namaalat);
//            FCabang.jumlah.setText(jumlah);
            FCabang.txtharga.setText(harga);
            FCabang.txtmerek.setText(merek);
            Date date = new Date();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String currentDate = dateFormat.format(date);
            FCabang.tglkirim.setText(currentDate);
//            FCabang.jumlah.setText(jumlah);
//            FCabang.stock.setText(status);

//            for (int i = 0; i < Data.FCabang.jComboBox1.getItemCount(); i++) {
//                if (Data.FCabang.jComboBox1.getItemAt(i).toString().equals(Cabang)) {
//                    Data.FCabang.jComboBox1.setSelectedIndex(i);
//                    break;
//                }
//
//            }
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_uas_pbo2", "root", "")) {
                String query = "SELECT stock FROM tb_data_alat WHERE kode_alat = ?";
                PreparedStatement statement = conn.prepareStatement(query);
                statement.setString(1, kodealat);
                ResultSet resultSet = statement.executeQuery();

                if (resultSet.next()) {
                    String stok = resultSet.getString("stock");
//                    stock2.setText(stok);
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
            try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_uas_pbo2", "root", "")) {
                String query = "SELECT jumlah FROM tb_gudang WHERE id_gudang = ?";
                PreparedStatement statement = conn.prepareStatement(query);
                statement.setString(1, idgudang);
                ResultSet resultSet = statement.executeQuery();

                if (resultSet.next()) {
                    String stok = resultSet.getString("jumlah");
                    Data.FCabang.stockk.setText(stok);
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }
            Data.FCabang.jumlah.setEnabled(true);
            dispose();
        }

    }//GEN-LAST:event_tampilMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FdataDikirim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FdataDikirim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FdataDikirim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FdataDikirim.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        try {
            FlatLaf.registerCustomDefaultsSource("raven.theme"); // Opsional, jika Anda memiliki file tema kustom
            FlatLaf.setup(new FlatLightLaf()); // Mengatur FlatLaf dengan tema Flat Dark (contoh)
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FdataCabang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSMetroTextPlaceHolder rSMetroTextPlaceHolder1;
    public static rojerusan.RSTableMetro tampil;
    // End of variables declaration//GEN-END:variables
}
